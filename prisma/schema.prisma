generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model branch {
  id          Int          @id @default(autoincrement())
  engName     String?      @db.VarChar(255)
  facultyId   Int?
  description String?      @db.VarChar(255)
  thaiName    String       @db.VarChar(255)
  abbrev      String?      @db.VarChar(5)
  faculty     faculty?     @relation(fields: [facultyId], references: [id], onUpdate: NoAction, map: "FK_dc9673eab0795a4e735b6b19109")
  curriculum  curriculum[]
  instructor  instructor?
  student     student?

  @@index([facultyId], map: "FK_dc9673eab0795a4e735b6b19109")
}

model clo {
  id                       Int          @id @default(autoincrement())
  name                     String?      @db.VarChar(255)
  ploId                    Int?
  courseSpecId             Int?
  thaiDescription          String?      @db.Text
  engDescription           String?      @db.Text
  skillId                  Int?         @unique(map: "REL_cf6376eb88d18fe9cb34d397d8")
  skill_clo_skillIdToskill skill?       @relation("clo_skillIdToskill", fields: [skillId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cf6376eb88d18fe9cb34d397d86")
  plo                      plo?         @relation(fields: [ploId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f890ecb0ec4382ec8528373c8c3")
  course_spec              course_spec? @relation(fields: [courseSpecId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ff37b2b9c2d6fcd62c22da0a2dc")
  skill_skill_cloIdToclo   skill?       @relation("skill_cloIdToclo")

  @@index([ploId], map: "FK_f890ecb0ec4382ec8528373c8c3")
  @@index([courseSpecId], map: "FK_ff37b2b9c2d6fcd62c22da0a2dc")
}

model course {
  name                          String                          @db.VarChar(255)
  active                        Int?                            @default(1) @db.TinyInt
  id                            Int                             @id @default(autoincrement())
  subjectId                     Int?
  thaiDescription               String?                         @db.Text
  engDescription                String?                         @db.Text
  subject                       subject?                        @relation(fields: [subjectId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_33b8f63c3518fa33a82e3779253")
  course_enrollment             course_enrollment[]
  course_instructors_instructor course_instructors_instructor[]

  @@index([subjectId], map: "FK_33b8f63c3518fa33a82e3779253")
}

model course_enrollment {
  id               Int                @id @default(autoincrement())
  courseId         Int?
  studentId        Int?
  course           course?            @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_59e16bd8605d12d48dd554e4c03")
  student          student?           @relation(fields: [studentId], references: [id], onDelete: Cascade, map: "FK_f56e46a62d53037bde7b8bde36b")
  skill_collection skill_collection[]

  @@index([courseId], map: "FK_59e16bd8605d12d48dd554e4c03")
  @@index([studentId], map: "FK_f56e46a62d53037bde7b8bde36b")
}

model course_instructors_instructor {
  instructorId Int
  courseId     Int
  instructor   instructor @relation(fields: [instructorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_364b5e066c8f9f5d60e14478262")
  course       course     @relation(fields: [courseId], references: [id], onDelete: Cascade, map: "FK_89a181cde7fb6268e7411d7c05f")

  @@id([instructorId, courseId])
  @@index([instructorId], map: "IDX_364b5e066c8f9f5d60e1447826")
  @@index([courseId], map: "IDX_89a181cde7fb6268e7411d7c05")
}

model course_spec {
  id              Int         @id @default(autoincrement())
  curriculumId    Int?
  subjectId       Int?
  thaiName        String?     @db.VarChar(255)
  engName         String?     @db.VarChar(255)
  credit          String?     @db.VarChar(255)
  type            String      @default("บังคับ") @db.VarChar(255)
  thaiDescription String?     @db.Text
  engDescription  String?     @db.Text
  clo             clo[]
  subject         subject?    @relation(fields: [subjectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7330e10fb6aeb6ea2cb629a8bc3")
  curriculum      curriculum? @relation(fields: [curriculumId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c05c80c12178c61d46baf40eadc")

  @@index([subjectId], map: "FK_7330e10fb6aeb6ea2cb629a8bc3")
  @@index([curriculumId], map: "FK_c05c80c12178c61d46baf40eadc")
}

model curriculum {
  engName                            String?                              @db.VarChar(255)
  engDegree                          String?                              @db.VarChar(255)
  period                             Int
  minimumGrade                       Int
  branchId                           Int?
  code                               String                               @unique(map: "IDX_72c5b54e0616ebfcf4aab3aa52") @db.VarChar(255)
  id                                 Int                                  @id @default(autoincrement())
  thaiName                           String?                              @db.VarChar(255)
  thaiDegree                         String?                              @db.VarChar(255)
  thaiDescription                    String?                              @db.Text
  engDescription                     String?                              @db.Text
  course_spec                        course_spec[]
  branch                             branch?                              @relation(fields: [branchId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cb4a4d68b74d4ed9406b5506807")
  curriculum_coordinators_instructor curriculum_coordinators_instructor[]
  curriculum_subjects_subject        curriculum_subjects_subject[]
  plo                                plo[]
  skill                              skill[]
  subject                            subject[]

  @@index([branchId], map: "FK_cb4a4d68b74d4ed9406b5506807")
}

model curriculum_coordinators_instructor {
  instructorId Int
  curriculumId Int
  instructor   instructor @relation(fields: [instructorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_386bbb70e1545d94c77bfa50fe0")
  curriculum   curriculum @relation(fields: [curriculumId], references: [id], onDelete: Cascade, map: "FK_aa83cb8cc962d1e9c3db12388e2")

  @@id([instructorId, curriculumId])
  @@index([instructorId], map: "IDX_386bbb70e1545d94c77bfa50fe")
  @@index([curriculumId], map: "IDX_aa83cb8cc962d1e9c3db12388e")
}

model curriculum_subjects_subject {
  curriculumId Int
  subjectId    Int
  subject      subject    @relation(fields: [subjectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7f554fe966d57b5242986a93231")
  curriculum   curriculum @relation(fields: [curriculumId], references: [id], onDelete: Cascade, map: "FK_a2c14947b1cbf7e96a9d71a0b08")

  @@id([curriculumId, subjectId])
  @@index([subjectId], map: "IDX_7f554fe966d57b5242986a9323")
  @@index([curriculumId], map: "IDX_a2c14947b1cbf7e96a9d71a0b0")
}

model faculty {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  engName     String?  @db.VarChar(255)
  description String?  @db.VarChar(255)
  abbrev      String?  @db.VarChar(10)
  branch      branch[]
}

model instructor {
  id                                 Int                                  @id @default(autoincrement())
  engName                            String?                              @db.VarChar(255)
  tel                                String?                              @db.VarChar(255)
  picture                            String?                              @db.VarChar(255)
  position                           String?                              @db.VarChar(255)
  email                              String                               @db.VarChar(255)
  officeRoom                         String?                              @db.VarChar(255)
  specialists                        String?                              @db.VarChar(255)
  socials                            String?                              @db.VarChar(255)
  branchId                           Int?                                 @unique(map: "REL_288b0c95f32ef3983af254db99")
  code                               String                               @unique(map: "IDX_acc29242f4471113684876c33c") @db.VarChar(255)
  thaiName                           String?                              @db.VarChar(255)
  bio                                String?                              @db.Text
  course_instructors_instructor      course_instructors_instructor[]
  curriculum_coordinators_instructor curriculum_coordinators_instructor[]
  branch                             branch?                              @relation(fields: [branchId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_288b0c95f32ef3983af254db99d")
  user                               user?
}

model plo {
  curriculumId    Int?
  id              Int         @id @default(autoincrement())
  type            String      @db.VarChar(255)
  name            String?     @db.VarChar(255)
  thaiDescription String?     @db.Text
  engDescription  String?     @db.Text
  clo             clo[]
  curriculum      curriculum? @relation(fields: [curriculumId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e818d3fa7cfae760c0a9e61e5b3")

  @@index([curriculumId], map: "FK_e818d3fa7cfae760c0a9e61e5b3")
}

model skill {
  id                                               Int                    @id @default(autoincrement())
  domain                                           String?                @default("ทักษะ") @db.VarChar(255)
  parentId                                         Int?
  cloId                                            Int?                   @unique(map: "REL_52c4a3bd34076cc55abd1fe8e1")
  curriculumId                                     Int?
  thaiName                                         String?                @db.VarChar(255)
  engName                                          String?                @db.VarChar(255)
  thaiDescription                                  String?                @db.Text
  engDescription                                   String?                @db.Text
  clo_clo_skillIdToskill                           clo?                   @relation("clo_skillIdToskill")
  clo_skill_cloIdToclo                             clo?                   @relation("skill_cloIdToclo", fields: [cloId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_52c4a3bd34076cc55abd1fe8e1a")
  curriculum                                       curriculum?            @relation(fields: [curriculumId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ce9e932ee33444f5d895dedfe30")
  skill                                            skill?                 @relation("skillToskill", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e234cee90be3691936e2350b610")
  other_skill                                      skill[]                @relation("skillToskill")
  skill_closure_skill_closure_id_descendantToskill skill_closure[]        @relation("skill_closure_id_descendantToskill")
  skill_closure_skill_closure_id_ancestorToskill   skill_closure[]        @relation("skill_closure_id_ancestorToskill")
  skill_expected_level                             skill_expected_level[]

  @@index([curriculumId], map: "FK_ce9e932ee33444f5d895dedfe30")
  @@index([parentId], map: "FK_e234cee90be3691936e2350b610")
}

model skill_closure {
  id_ancestor                              Int
  id_descendant                            Int
  skill_skill_closure_id_descendantToskill skill @relation("skill_closure_id_descendantToskill", fields: [id_descendant], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1c343f8561a77f5fd83376094d2")
  skill_skill_closure_id_ancestorToskill   skill @relation("skill_closure_id_ancestorToskill", fields: [id_ancestor], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6248283fe2abc0c715040faa38a")

  @@id([id_ancestor, id_descendant])
  @@index([id_descendant], map: "IDX_1c343f8561a77f5fd83376094d")
  @@index([id_ancestor], map: "IDX_6248283fe2abc0c715040faa38")
}

model skill_collection {
  id                   Int                   @id @default(autoincrement())
  gainedLevel          Int                   @default(0)
  passed               Int                   @default(0) @db.TinyInt
  ExpectedLevelId      Int?
  courseEnrollmentId   Int?
  studentId            Int?
  course_enrollment    course_enrollment?    @relation(fields: [courseEnrollmentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_11285e8bd61a36be29733d1de08")
  skill_expected_level skill_expected_level? @relation(fields: [ExpectedLevelId], references: [id], onDelete: Cascade, map: "FK_63c3716bda417ef80c4ec1a90e1")
  student              student?              @relation(fields: [studentId], references: [id], onDelete: Cascade, map: "FK_95de4de8664465fc0e64663d83a")

  @@index([courseEnrollmentId], map: "FK_11285e8bd61a36be29733d1de08")
  @@index([ExpectedLevelId], map: "FK_63c3716bda417ef80c4ec1a90e1")
  @@index([studentId], map: "FK_95de4de8664465fc0e64663d83a")
}

model skill_expected_level {
  id               Int                @id @default(autoincrement())
  expectedLevel    Int?
  skillId          Int?
  subjectId        Int?
  skill_collection skill_collection[]
  skill            skill?             @relation(fields: [skillId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_57349e9a4e934e2777ec5060416")
  subject          subject?           @relation(fields: [subjectId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d2a8c300620df6991fa8b2bed75")

  @@index([skillId], map: "FK_57349e9a4e934e2777ec5060416")
  @@index([subjectId], map: "FK_d2a8c300620df6991fa8b2bed75")
}

model student {
  engName           String?             @db.VarChar(255)
  enrollmentDate    DateTime?           @db.DateTime(0)
  socials           String?             @db.VarChar(255)
  branchId          Int?                @unique(map: "REL_5f94399d84bb398de83e414cb0")
  code              String              @db.VarChar(255)
  id                Int                 @id @default(autoincrement())
  thaiName          String              @db.VarChar(255)
  course_enrollment course_enrollment[]
  skill_collection  skill_collection[]
  branch            branch?             @relation(fields: [branchId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5f94399d84bb398de83e414cb0f")
  user              user?
}

model subject {
  engName                     String?                       @db.VarChar(255)
  code                        String                        @unique(map: "IDX_92374adc6b583e8cf659977e48") @db.VarChar(255)
  id                          Int                           @id @default(autoincrement())
  curriculumId                Int?
  thaiName                    String?                       @db.VarChar(255)
  course                      course[]
  course_spec                 course_spec[]
  curriculum_subjects_subject curriculum_subjects_subject[]
  skill_expected_level        skill_expected_level[]
  curriculum                  curriculum?                   @relation(fields: [curriculumId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_71de3e1325b95ad8ba7b9adff0a")

  @@index([curriculumId], map: "FK_71de3e1325b95ad8ba7b9adff0a")
}

model tech_skill {
  name        String @db.VarChar(255)
  description String @db.VarChar(255)
  slug        String @unique(map: "IDX_78cdc1dde74944541af8310e48") @db.VarChar(255)
  id          Int    @id @default(autoincrement())
}

model user {
  id                 Int         @id @default(autoincrement())
  email              String      @unique(map: "IDX_e12875dfb3b1d92d7d7c5377e2") @db.VarChar(255)
  password           String      @db.VarChar(255)
  avatarUrl          String      @default("unknown.jpg") @db.VarChar(255)
  role               String?     @db.VarChar(255)
  hashedRefreshToken String?     @db.VarChar(255)
  teacherId          Int?        @unique(map: "REL_d841b74fd2e92061b15c20d4ea")
  studentId          Int?        @unique(map: "REL_2279dce27cfb8d7b0e6e9bbf5c")
  student            student?    @relation(fields: [studentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2279dce27cfb8d7b0e6e9bbf5cd")
  instructor         instructor? @relation(fields: [teacherId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d841b74fd2e92061b15c20d4eaa")
}
